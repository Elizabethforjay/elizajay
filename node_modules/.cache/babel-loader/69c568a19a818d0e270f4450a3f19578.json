{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useReducer } from 'react';\nimport getListReducers from './getListReducers';\nimport { GET_LIST, LOADING_STARTS, LOADING_STOPS } from './feedbackTypes';\n\nconst useGetList = () => {\n  _s();\n\n  const [{\n    data,\n    isLoading\n  }, dispatch] = useReducer(getListReducers, {\n    data: [],\n    isLoading: false\n  });\n\n  const getList = async () => {\n    dispatch({\n      type: LOADING_STARTS\n    });\n\n    try {\n      const response = await axios.get(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}`);\n\n      if (response.data) {\n        console.log(response.data.data);\n        toast.info('Success');\n        dispatch({\n          type: GET_LIST,\n          payload: {\n            data: response.data.data.data\n          }\n        });\n      }\n    } catch (e) {\n      toast.info('Something went wrong!');\n\n      if (e.response) {\n        dispatch({\n          type: LOADING_STOPS\n        });\n      }\n    }\n  };\n\n  const deleteList = async id => {\n    dispatch({\n      type: LOADING_STARTS\n    });\n\n    try {\n      const response = await axios.delete(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}/${id}`);\n\n      if (response.data) {\n        toast.success('Delete Successful');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      }\n    } catch (e) {\n      toast.info('Something went wrong!');\n      dispatch({\n        type: LOADING_STOPS\n      });\n    }\n  };\n\n  return {\n    getList,\n    deleteList,\n    data,\n    isLoading\n  };\n};\n\n_s(useGetList, \"I0a3/vrZaQFqbdPkSFpgNslAaHQ=\");\n\nexport default useGetList;","map":{"version":3,"sources":["C:/Users/rdp/Downloads/apireyes/src/api/useGetList.js"],"names":["axios","toast","useReducer","getListReducers","GET_LIST","LOADING_STARTS","LOADING_STOPS","useGetList","data","isLoading","dispatch","getList","type","response","get","console","log","info","payload","e","deleteList","id","delete","success","setTimeout","window","location","reload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,QAAT,EAAmBC,cAAnB,EAAmCC,aAAnC,QAAwD,iBAAxD;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAAC;AAAGC,IAAAA,IAAH;AAASC,IAAAA;AAAT,GAAD,EAAuBC,QAAvB,IAAmCR,UAAU,CAACC,eAAD,EAAkB;AAClEK,IAAAA,IAAI,EAAE,EAD4D;AAEnEC,IAAAA,SAAS,EAAE;AAFwD,GAAlB,CAAnD;;AAKA,QAAME,OAAO,GAAG,YAAY;AAC1BD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAW,GAAE,uDAAwD,EAArE,CAAvB;;AACA,UAAID,QAAQ,CAACL,IAAb,EAAmB;AACjBO,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACL,IAAT,CAAcA,IAA1B;AACAP,QAAAA,KAAK,CAACgB,IAAN,CAAW,SAAX;AACAP,QAAAA,QAAQ,CAAC;AACPE,UAAAA,IAAI,EAAER,QADC;AAEPc,UAAAA,OAAO,EAAE;AACNV,YAAAA,IAAI,EAAEK,QAAQ,CAACL,IAAT,CAAcA,IAAd,CAAmBA;AADnB;AAFF,SAAD,CAAR;AAOD;AACF,KAbD,CAaE,OAAOW,CAAP,EAAU;AACVlB,MAAAA,KAAK,CAACgB,IAAN,CAAW,uBAAX;;AACA,UAAIE,CAAC,CAACN,QAAN,EAAgB;AACdH,QAAAA,QAAQ,CAAC;AAAEE,UAAAA,IAAI,EAAEN;AAAR,SAAD,CAAR;AACD;AACF;AACF,GArBD;;AAuBA,QAAMc,UAAU,GAAG,MAAOC,EAAP,IAAc;AAC/BX,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEP;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMb,KAAK,CAACsB,MAAN,CAAc,GAAE,uDAAwD,IAAGD,EAAG,EAA9E,CAAvB;;AACA,UAAIR,QAAQ,CAACL,IAAb,EAAmB;AACjBP,QAAAA,KAAK,CAACsB,OAAN,CAAc,mBAAd;AACAC,QAAAA,UAAU,CAAC,MAAM;AACfC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,SAFS,EAEP,IAFO,CAAV;AAGD;AACF,KARD,CAQE,OAAOR,CAAP,EAAU;AACVlB,MAAAA,KAAK,CAACgB,IAAN,CAAW,uBAAX;AACAP,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEN;AAAR,OAAD,CAAR;AACD;AACF,GAdD;;AAgBA,SAAO;AAAEK,IAAAA,OAAF;AAAWS,IAAAA,UAAX;AAAwBZ,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,GAAP;AACD,CA9CD;;GAAMF,U;;AAgDN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useReducer } from 'react';\nimport getListReducers from './getListReducers';\nimport { GET_LIST, LOADING_STARTS, LOADING_STOPS } from './feedbackTypes';\n\nconst useGetList = () => {\n  const [{  data, isLoading }, dispatch] = useReducer(getListReducers, {\n     data: [],\n    isLoading: false,\n  });\n\n  const getList = async () => {\n    dispatch({ type: LOADING_STARTS });\n    try {\n      const response = await axios.get(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}`);\n      if (response.data) {\n        console.log(response.data.data);\n        toast.info('Success');\n        dispatch({\n          type: GET_LIST,\n          payload: {\n             data: response.data.data.data,\n    \n          },\n        });\n      }\n    } catch (e) {\n      toast.info('Something went wrong!');\n      if (e.response) {\n        dispatch({ type: LOADING_STOPS });\n      }\n    }\n  };\n\n  const deleteList = async (id) => {\n    dispatch({ type: LOADING_STARTS });\n    try {\n      const response = await axios.delete(`${'https://share-point-tt.herokuapp.com/api/loginDetails'}/${id}`);\n      if (response.data) {\n        toast.success('Delete Successful');\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      }\n    } catch (e) {\n      toast.info('Something went wrong!');\n      dispatch({ type: LOADING_STOPS });\n    }\n  };\n\n  return { getList, deleteList,  data, isLoading };\n};\n\nexport default useGetList;\n"]},"metadata":{},"sourceType":"module"}