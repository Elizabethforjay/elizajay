{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/Archive/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst delay = 17280;\nexport default function App() {\n  _s();\n\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    let timer1 = setTimeout(() => setShow(true), delay * 1000); // this will clear Timeout\n    // when component unmount like in willComponentUnmount\n    // and show will not change to true\n\n    return () => {\n      clearTimeout(timer1);\n    };\n  }, // useEffect will run only one time with empty []\n  // if you pass a value to array,\n  // like this - [data]\n  // than clearTimeout will run every time\n  // this value changes (useEffect re-run)\n  []);\n  return show ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"show is true, \", delay, \"seconds passed\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"show is false, wait \", delay, \"seconds\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bXBd/WbmO9A8Q7bxaOKZvuJyGc0=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mac/Downloads/Archive/src/App.js"],"names":["useState","useEffect","delay","App","show","setShow","timer1","setTimeout","clearTimeout"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,KAAK,GAAG,KAAd;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,KAAD,CAAhC;AAEAC,EAAAA,SAAS,CACP,MAAM;AACJ,QAAIK,MAAM,GAAGC,UAAU,CAAC,MAAMF,OAAO,CAAC,IAAD,CAAd,EAAsBH,KAAK,GAAG,IAA9B,CAAvB,CADI,CAGJ;AACA;AACA;;AACA,WAAO,MAAM;AACXM,MAAAA,YAAY,CAACF,MAAD,CAAZ;AACD,KAFD;AAGD,GAVM,EAWP;AACA;AACA;AACA;AACA;AACA,IAhBO,CAAT;AAmBA,SAAOF,IAAI,gBACT;AAAA,iCAAoBF,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA,UADS,gBAGT;AAAA,uCAA0BA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAKD;;GA3BuBC,G;;KAAAA,G","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst delay = 17280;\n\nexport default function App() {\n  const [show, setShow] = useState(false);\n\n  useEffect(\n    () => {\n      let timer1 = setTimeout(() => setShow(true), delay * 1000);\n\n      // this will clear Timeout\n      // when component unmount like in willComponentUnmount\n      // and show will not change to true\n      return () => {\n        clearTimeout(timer1);\n      };\n    },\n    // useEffect will run only one time with empty []\n    // if you pass a value to array,\n    // like this - [data]\n    // than clearTimeout will run every time\n    // this value changes (useEffect re-run)\n    []\n  );\n\n  return show ? (\n    <div>show is true, {delay}seconds passed</div>\n  ) : (\n    <div>show is false, wait {delay}seconds</div>\n  );\n}"]},"metadata":{},"sourceType":"module"}